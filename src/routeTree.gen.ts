/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as CustomersImport } from './routes/customers'
import { Route as IndexImport } from './routes/index'
import { Route as CustomersCreateImport } from './routes/customers.create'
import { Route as CustomersCustomerIdImport } from './routes/customers.$customerId'
import { Route as CustomersCustomerIdUpdateImport } from './routes/customers.$customerId_.update'

// Create/Update Routes

const CustomersRoute = CustomersImport.update({
  path: '/customers',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const CustomersCreateRoute = CustomersCreateImport.update({
  path: '/create',
  getParentRoute: () => CustomersRoute,
} as any)

const CustomersCustomerIdRoute = CustomersCustomerIdImport.update({
  path: '/$customerId',
  getParentRoute: () => CustomersRoute,
} as any)

const CustomersCustomerIdUpdateRoute = CustomersCustomerIdUpdateImport.update({
  path: '/$customerId/update',
  getParentRoute: () => CustomersRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/customers': {
      id: '/customers'
      path: '/customers'
      fullPath: '/customers'
      preLoaderRoute: typeof CustomersImport
      parentRoute: typeof rootRoute
    }
    '/customers/$customerId': {
      id: '/customers/$customerId'
      path: '/$customerId'
      fullPath: '/customers/$customerId'
      preLoaderRoute: typeof CustomersCustomerIdImport
      parentRoute: typeof CustomersImport
    }
    '/customers/create': {
      id: '/customers/create'
      path: '/create'
      fullPath: '/customers/create'
      preLoaderRoute: typeof CustomersCreateImport
      parentRoute: typeof CustomersImport
    }
    '/customers/$customerId/update': {
      id: '/customers/$customerId/update'
      path: '/$customerId/update'
      fullPath: '/customers/$customerId/update'
      preLoaderRoute: typeof CustomersCustomerIdUpdateImport
      parentRoute: typeof CustomersImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexRoute,
  CustomersRoute: CustomersRoute.addChildren({
    CustomersCustomerIdRoute,
    CustomersCreateRoute,
    CustomersCustomerIdUpdateRoute,
  }),
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/customers"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/customers": {
      "filePath": "customers.tsx",
      "children": [
        "/customers/$customerId",
        "/customers/create",
        "/customers/$customerId/update"
      ]
    },
    "/customers/$customerId": {
      "filePath": "customers.$customerId.tsx",
      "parent": "/customers"
    },
    "/customers/create": {
      "filePath": "customers.create.tsx",
      "parent": "/customers"
    },
    "/customers/$customerId/update": {
      "filePath": "customers.$customerId_.update.tsx",
      "parent": "/customers"
    }
  }
}
ROUTE_MANIFEST_END */
